# Loop through each sheet
for (sheet_name in sheet_names) {
# Read data from the current sheet, starting from the third row
data <- read_excel(excel_file_path, sheet = sheet_name, skip = 1)
colnames(data) <- column_names
# Combine the data into the 'generation_data' dataframe
generation_data <- bind_rows(generation_data, data)}
head(generation_data)
#Convert chars to factors
convert_chars_to_factors <- function(df) {
for (col in names(df)) {
if (is.character(df[[col]])) {
df[[col]] <- factor(df[[col]])
}
}
return(df)
}
generation_data <- convert_chars_to_factors(generation_data)
generation_data$month <- factor(generation_data$month)
generation_data$year <- factor(generation_data$year)
# Create date column
generation_data$date <- as.Date(paste(generation_data$year, generation_data$month, "01", sep = "-"))
#generation_data$date <- factor(generation_data$date)
```
# Create date column
generation_data$date <- as.Date(paste(generation_data$year, generation_data$month, "01", sep = "-"))
#generation_data$date <- factor(generation_data$date)
summary(generation_data)
str(generation_data)
ggplot(data = generation_data, mapping = aes(x = date, y = generation_mwh))+
geom_point()
```{r}
str(generation_data, '.')
```{r}
```{r}
```{r}
library(readr)
```{r}
```{r}
write_csv(generation_data, "C:\\Users\matti\Documents\GitHub\business_data\data")
write_csv(generation_data, "C:\\Users\matti\Documents\GitHub\business_data\data\data.csv")
write_csv(generation_data, "C:\\Users\matti\Documents\GitHub\business_data\data\data.csv")
write_csv(generation_data,'data.csv')
plot_data <- generation_data %>%
group_by(date, energy_source) %>%
summarise(gen_by_energy = sum(generation_mwh))
plot_data <- generation_data %>%
group_by(date, energy_source) %>%
summarise(gen_by_energy = sum(generation_mwh))
plot_data
ggplot(data = plot_data, aes(x = date, y = gen_by_energy, color= energy_source)) +
geom_point()
summary(df)
df <- generation_data %>% filter(state == "DC")
summary(df)
write_csv(df, 'df.csv')
ggplot(data = df, mapping = aes(x = date, y = generation_mwh))+
geom_point()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
library(ggplot2)
library(dplyr)
# to read the excel files
library(readxl)
library(readr)
# Specify the path to your Excel file
excel_file_path <- "data/generation_monthly.xlsx"
column_names <- c("year", "month", "state", "type_of_producer", "energy_source", "generation_mwh")
generation_data <- data.frame()
# Get the list of sheet names in the Excel file
sheet_names <- excel_sheets(excel_file_path)
# Loop through each sheet
for (sheet_name in sheet_names) {
# Read data from the current sheet, starting from the third row
data <- read_excel(excel_file_path, sheet = sheet_name, skip = 1)
colnames(data) <- column_names
# Combine the data into the 'generation_data' dataframe
generation_data <- bind_rows(generation_data, data)}
head(generation_data)
#Convert chars to factors
convert_chars_to_factors <- function(df) {
for (col in names(df)) {
if (is.character(df[[col]])) {
df[[col]] <- factor(df[[col]])
}
}
return(df)
}
generation_data <- convert_chars_to_factors(generation_data)
generation_data$month <- factor(generation_data$month)
generation_data$year <- factor(generation_data$year)
# Create date column
generation_data$date <- as.Date(paste(generation_data$year, generation_data$month, "01", sep = "-"))
#generation_data$date <- factor(generation_data$date)
summary(generation_data)
str(generation_data)
df <- generation_data %>% filter(state == "DC")
summary(df)
write_csv(df, 'df.csv')
write_csv(generation_data,'data.csv')
ggplot(data = df, mapping = aes(x = date, y = generation_mwh))+
geom_point()
plot_data <- generation_data %>%
group_by(date, energy_source) %>%
summarise(gen_by_energy = sum(generation_mwh))
plot_data
ggplot(data = plot_data, aes(x = date, y = gen_by_energy, color= energy_source)) +
geom_point()
library(ggplot2)
library(dplyr)
# model libraries
library(lmtest)
library(forecast)
library(DIMORA)
library(fpp2)
library(graphics)
# read data
data <- read.csv("data/energy_data.csv", sep = ';', dec = '.')
# Explore data structure and summary
str(data)
# read data
data <- read.csv("data/energy_data.csv", sep = ';', dec = '.')
setwd("~/GitHub/business_data")
# read data
data <- read.csv("data/energy_data.csv", sep = ';', dec = '.')
# read data
data <- read.csv("data/energy_data.csv", sep = ';', dec = '.')
# Explore data structure and summary
str(data)
summary(data)
setwd("~/GitHub/business_data")
# Convert DATE to Date type
data$DATE <- as.Date(data$DATE, format = "%d/%m/%Y")
# Plot time series for Solar, thermal and photovoltaic with custom y-axis labels
plot(data$DATE, data$Solar.Thermal.and.Photovoltaic, type = "b", xlab = "Date", ylab = "Petroleum Generation",
main = "Time Series of Solar | Thermal | Photovoltaic Generation", ylim = c(0, 5000))
install.packages("languageserver")
# Melt the data for ggplot
library(reshape2)
energy_data_melted <- melt(data, id.vars = "DATE", measure.vars = c('Natural.Gas','Other.Biomass','Petroleum','Solar.Thermal.and.Photovoltaic'))
# Create a bar plot
ggplot(energy_data_melted, aes(x = DATE, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "stack", color = "black") +
labs(title = "Energy Generation Over Time",
x = "Date",
y = "Energy Generated (units)",
fill = "Energy Source") +
theme_minimal()
print(colnames(data))
# Plot time series for Solar, thermal and photovoltaic with custom y-axis labels
plot(data$DATE, data$Solar.Thermal.and.Photovoltaic, type = "b", xlab = "Date", ylab = "Petroleum Generation",
main = "Time Series of Solar | Thermal | Photovoltaic Generation", ylim = c(0, 5000))
plot(data$DATE, data$Solar.Thermal.and.Photovoltaic, type = "o", pch = 16, col = "blue", xlab = "Date", ylab = "Generation (MWh)",
main = "Time Series of Solar | Thermal | Photovoltaic Generation", ylim = c(0, 5000), xlim = c(as.Date("2001-01-01"), as.Date("2022-12-31")))
grid()
lines(smooth.spline(data$DATE, data$Solar.Thermal.and.Photovoltaic), col = "red")
axis(1, at = seq(as.Date("2001-01-01"), as.Date("2022-12-31"), by = "years"), format = "%Y")
legend("topright", legend = "Solar | Thermal | Photovoltaic", col = "blue", lty = 1, cex = 0.8)
plot(data$DATE, data$Solar.Thermal.and.Photovoltaic, type = "o", pch = 16, col = "blue", xlab = "Date", ylab = "Generation (MWh)",
main = "Time Series of Solar | Thermal | Photovoltaic Generation", ylim = c(0, 5000), xlim = c(as.Date("2001-01-01"), as.Date("2022-12-31")))
grid()
plot(data$DATE, data$Solar.Thermal.and.Photovoltaic, type = "o", pch = 16, col = "blue", xlab = "Date", ylab = "Generation (MWh)",
main = "Time Series of Solar | Thermal | Photovoltaic Generation", ylim = c(0, 3000), xlim = c(as.Date("2001-01-01"), as.Date("2022-12-31")))
grid()
lines(smooth.spline(data$DATE, data$Solar.Thermal.and.Photovoltaic), col = "red")
axis(1, at = seq(as.Date("2001-01-01"), as.Date("2022-12-31"), by = "years"), format = "%Y")
axis(1, at = seq(as.Date("2001-01-01"), as.Date("2022-12-31"), by = "years"), format = "%Y", las =2)
axis.Date(1, at = seq(as.Date("2001-01-01"), as.Date("2022-12-31"), by = "years"), format = "%Y", las = 2)
axis(1, at = seq(as.Date("2001-01-01"), as.Date("2022-12-31"), by = "years"), labels = strftime(seq(as.Date("2001-01-01"), as.Date("2022-12-31"), by = "years"), format = "%Y"), las = 2)
legend("topright", legend = "Solar | Thermal | Photovoltaic", col = "blue", lty = 1, cex = 0.8)
)
plot(data$DATE, data$Solar.Thermal.and.Photovoltaic, type = "o", pch = 16, col = "blue", xlab = "Date", ylab = "Generation (MWh)",
main = "Time Series of Solar | Thermal | Photovoltaic Generation", ylim = c(0, 3000), xlim = c(as.Date("2001-01-01"), as.Date("2022-12-31")))
grid()
plot(data$DATE, data$Solar.Thermal.and.Photovoltaic, type = "o", pch = 16, col = "blue", xlab = "Date", ylab = "Generation (MWh)",
main = "Time Series of Solar | Thermal | Photovoltaic Generation", ylim = c(0, 3000), xlim = c(as.Date("2001-01-01"), as.Date("2022-12-31")), las =2)
)
)
plot(data$DATE, data$Solar.Thermal.and.Photovoltaic, type = "o", pch = 16, col = "blue", xlab = "Date", ylab = "Generation (MWh)",
main = "Time Series of Solar | Thermal | Photovoltaic Generation", ylim = c(0, 3000), xlim = c(as.Date("2001-01-01"), as.Date("2022-12-31")), las =2)
grid()
plot(data$DATE, data$Solar.Thermal.and.Photovoltaic, type = "s", pch = 16, col = "blue", xlab = "Date", ylab = "Generation (MWh)",
main = "Time Series of Solar | Thermal | Photovoltaic Generation", ylim = c(0, 3000), xlim = c(as.Date("2001-01-01"), as.Date("2022-12-31")), las =2)
grid()
lines(smooth.spline(data$DATE, data$Solar.Thermal.and.Photovoltaic), col = "red")
legend("topright", legend = "Solar | Thermal | Photovoltaic", col = "blue", lty = 1, cex = 0.8)
legend("topright", legend = "Solar | Thermal | Photovoltaic", col = "blue", lty = 1, cex = 0.8,
'topright', legend = 'Smoothline', col = ' red', lty = 1, cex = 0.8)
# Customize y-axis labels
axis(side = 2, at = seq(0, 60000, by = 10000), labels = seq(0, 60000, by = 10000))
legend("topright", legend = c("Solar | Thermal | Photovoltaic", "Smoothline"), col = c("blue", "red"), lty = 1, cex = 0.8)
plot(data$DATE, data$Solar.Thermal.and.Photovoltaic, type = "h", pch = 16, col = "blue", xlab = "Date", ylab = "Generation (MWh)",
main = "Time Series of Solar | Thermal | Photovoltaic Generation", ylim = c(0, 3000), xlim = c(as.Date("2001-01-01"), as.Date("2022-12-31")), las =2)
plot(data$DATE, data$Solar.Thermal.and.Photovoltaic, type = "c", pch = 16, col = "blue", xlab = "Date", ylab = "Generation (MWh)",
main = "Time Series of Solar | Thermal | Photovoltaic Generation", ylim = c(0, 3000), xlim = c(as.Date("2001-01-01"), as.Date("2022-12-31")), las =2)
plot(data$DATE, data$Solar.Thermal.and.Photovoltaic, type = "b", pch = 16, col = "blue", xlab = "Date", ylab = "Generation (MWh)",
main = "Time Series of Solar | Thermal | Photovoltaic Generation", ylim = c(0, 3000), xlim = c(as.Date("2001-01-01"), as.Date("2022-12-31")), las =2)
plot(data$DATE, data$Solar.Thermal.and.Photovoltaic, type = "l", pch = 16, col = "blue", xlab = "Date", ylab = "Generation (MWh)",
main = "Time Series of Solar | Thermal | Photovoltaic Generation", ylim = c(0, 3000), xlim = c(as.Date("2001-01-01"), as.Date("2022-12-31")), las =2)
grid()
lines(smooth.spline(data$DATE, data$Solar.Thermal.and.Photovoltaic), col = "red")
# Customize y-axis labels
axis(side = 2, at = seq(0, 60000, by = 10000), labels = seq(0, 60000, by = 10000))
# Plot for Solar | Thermal | Photovoltaic
plot(data$DATE, data$Solar.Thermal.and.Photovoltaic, type = "l", pch = 16, col = "blue", xlab = "Date", ylab = "Generation (MWh)",
main = "Time Series of Solar | Thermal | Photovoltaic Generation", ylim = c(0, 3000), xlim = c(as.Date("2001-01-01"), as.Date("2022-12-31")), las = 2)
grid()
lines(smooth.spline(data$DATE, data$Solar.Thermal.and.Photovoltaic), col = "red")
# Plot for Petroleum
lines(data$DATE, data$Petroleum, type = "l", col = "green")
lines(smooth.spline(data$DATE, data$Petroleum), col = "darkgreen")
# Plot for Natural Gas
lines(data$DATE, data$Natural.Gas, type = "l", col = "orange")
lines(smooth.spline(data$DATE, data$Natural.Gas), col = "darkorange")
# Plot for Other Biomass
lines(data$DATE, data$Other.Biomass, type = "l", col = "purple")
lines(smooth.spline(data$DATE, data$Other.Biomass), col = "darkpurple")
# Plot for Solar | Thermal | Photovoltaic
plot(data$DATE, data$Solar.Thermal.and.Photovoltaic, type = "l", pch = 16, col = "blue", xlab = "Date", ylab = "Generation (MWh)",
main = "Time Series of Solar | Thermal | Photovoltaic Generation", ylim = c(0, 3000), xlim = c(as.Date("2001-01-01"), as.Date("2022-12-31")), las = 2)
grid()
lines(smooth.spline(data$DATE, data$Solar.Thermal.and.Photovoltaic), col = "red")
# Plot for Petroleum
lines(data$DATE, data$Petroleum, type = "l", col = "green")
# Plot for Solar | Thermal | Photovoltaic
plot(data$DATE, data$Solar.Thermal.and.Photovoltaic, type = "l", pch = 16, col = "blue", xlab = "Date", ylab = "Generation (MWh)",
main = "Time Series of Solar | Thermal | Photovoltaic Generation", ylim = c(0, 10000), xlim = c(as.Date("2001-01-01"), as.Date("2022-12-31")), las = 2)
grid()
lines(smooth.spline(data$DATE, data$Solar.Thermal.and.Photovoltaic), col = "red")
# Plot for Petroleum
lines(data$DATE, data$Petroleum, type = "l", col = "green")
lines(smooth.spline(data$DATE, data$Petroleum), col = "darkgreen")
# Plot for Natural Gas
lines(data$DATE, data$Natural.Gas, type = "l", col = "orange")
lines(smooth.spline(data$DATE, data$Natural.Gas), col = "darkorange")
# Plot for Solar | Thermal | Photovoltaic
plot(data$DATE, data$Solar.Thermal.and.Photovoltaic, type = "l", pch = 16, col = "blue", xlab = "Date", ylab = "Generation (MWh)",
main = "Time Series of Solar | Thermal | Photovoltaic Generation", ylim = c(0, 20000), xlim = c(as.Date("2001-01-01"), as.Date("2022-12-31")), las = 2)
grid()
lines(smooth.spline(data$DATE, data$Solar.Thermal.and.Photovoltaic), col = "red")
# Plot for Petroleum
lines(data$DATE, data$Petroleum, type = "l", col = "green")
lines(smooth.spline(data$DATE, data$Petroleum), col = "darkgreen")
# Plot for Natural Gas
lines(data$DATE, data$Natural.Gas, type = "l", col = "orange")
# Plot for Solar | Thermal | Photovoltaic
plot(data$DATE, data$Solar.Thermal.and.Photovoltaic, type = "l", pch = 16, col = "blue", xlab = "Date", ylab = "Generation (MWh)",
main = "Time Series of Solar | Thermal | Photovoltaic Generation", ylim = c(0, 30000), xlim = c(as.Date("2001-01-01"), as.Date("2022-12-31")), las = 2)
grid()
lines(smooth.spline(data$DATE, data$Solar.Thermal.and.Photovoltaic), col = "red")
# Plot for Petroleum
lines(data$DATE, data$Petroleum, type = "l", col = "green")
# Plot for Solar | Thermal | Photovoltaic
plot(data$DATE, data$Solar.Thermal.and.Photovoltaic, type = "l", pch = 16, col = "blue", xlab = "Date", ylab = "Generation (MWh)",
main = "Time Series of Solar | Thermal | Photovoltaic Generation", ylim = c(0, 50000), xlim = c(as.Date("2001-01-01"), as.Date("2022-12-31")), las = 2)
grid()
lines(smooth.spline(data$DATE, data$Solar.Thermal.and.Photovoltaic), col = "red")
# Plot for Petroleum
lines(data$DATE, data$Petroleum, type = "l", col = "green")
# Plot for Solar | Thermal | Photovoltaic
plot(data$DATE, data$Solar.Thermal.and.Photovoltaic, type = "l", pch = 16, col = "blue", xlab = "Date", ylab = "Generation (MWh)",
main = "Time Series of Solar | Thermal | Photovoltaic Generation", ylim = c(0, 100000), xlim = c(as.Date("2001-01-01"), as.Date("2022-12-31")), las = 2)
grid()
lines(smooth.spline(data$DATE, data$Solar.Thermal.and.Photovoltaic), col = "red")
# Plot for Petroleum
lines(data$DATE, data$Petroleum, type = "l", col = "green")
lines(smooth.spline(data$DATE, data$Petroleum), col = "darkgreen")
# Plot for Natural Gas
lines(data$DATE, data$Natural.Gas, type = "l", col = "orange")
lines(smooth.spline(data$DATE, data$Natural.Gas), col = "darkorange")
# Plot for Other Biomass
lines(data$DATE, data$Other.Biomass, type = "l", col = "purple")
lines(smooth.spline(data$DATE, data$Other.Biomass), col = "darkpurple")
# Legend
legend("topright", legend = c("Solar | Thermal | Photovoltaic", "Petroleum", "Natural Gas", "Other Biomass", "Smoothline"),
col = c("blue", "green", "orange", "purple", "red"), lty = 1, cex = 0.8)
# Plot for Solar | Thermal | Photovoltaic
plot(data$DATE, data$Solar.Thermal.and.Photovoltaic, type = "l", pch = 16, col = "blue", xlab = "Date", ylab = "Generation (MWh)",
main = "Time Series overall generation for each energy source", ylim = c(0, 100000), xlim = c(as.Date("2001-01-01"), as.Date("2022-12-31")), las = 2)
grid()
lines(smooth.spline(data$DATE, data$Solar.Thermal.and.Photovoltaic), col = "red")
# Plot for Petroleum
lines(data$DATE, data$Petroleum, type = "l", col = "green")
lines(smooth.spline(data$DATE, data$Petroleum), col = "darkgreen")
# Plot for Natural Gas
lines(data$DATE, data$Natural.Gas, type = "l", col = "orange")
lines(smooth.spline(data$DATE, data$Natural.Gas), col = "darkorange")
# Plot for Other Biomass
lines(data$DATE, data$Other.Biomass, type = "l", col = "purple")
lines(smooth.spline(data$DATE, data$Other.Biomass), col = "darkpurple")
# Legend
legend("topright", legend = c("Solar | Thermal | Photovoltaic", "Petroleum", "Natural Gas", "Other Biomass", "Smoothline"),
col = c("blue", "green", "orange", "purple", "red"), lty = 1, cex = 0.8)
# Plot for Solar | Thermal | Photovoltaic
plot(data$DATE, data$Solar.Thermal.and.Photovoltaic, type = "l", pch = 16, col = "blue", xlab = "Date", ylab = "Generation (MWh)",
main = "Time series overall generation for each energy source", ylim = c(0, 100000), xlim = c(as.Date("2001-01-01"), as.Date("2022-12-31")), las = 2)
grid()
lines(smooth.spline(data$DATE, data$Solar.Thermal.and.Photovoltaic), col = "red")
# Plot for Petroleum
lines(data$DATE, data$Petroleum, type = "l", col = "green")
lines(smooth.spline(data$DATE, data$Petroleum), col = "darkgreen")
# Plot for Natural Gas
lines(data$DATE, data$Natural.Gas, type = "l", col = "orange")
lines(smooth.spline(data$DATE, data$Natural.Gas), col = "darkorange")
# Plot for Other Biomass
lines(data$DATE, data$Other.Biomass, type = "l", col = "purple")
lines(smooth.spline(data$DATE, data$Other.Biomass), col = "darkpurple")
# Legend
legend("topright", legend = c("Solar | Thermal | Photovoltaic", "Petroleum", "Natural Gas", "Other Biomass", "Smoothline"),
col = c("blue", "green", "orange", "purple", "red"), lty = 1, cex = 0.8)
# Plot time series for Solar, thermal and photovoltaic with custom y-axis labels
plot(data$DATE, data$Solar.Thermal.and.Photovoltaic, type = "l", xlab = "Date", ylab = "Generation",
main = "Time Series of Solar | Thermal | Photovoltaic Generation", ylim = c(0, 5000))
# Plot time series for Solar, thermal and photovoltaic with custom y-axis labels
plot(data$DATE, data$Solar.Thermal.and.Photovoltaic, type = "l", col= 'blue', pch=16 xlab = "Date", ylab = "Generation",
# Plot time series for Solar, thermal and photovoltaic with custom y-axis labels
plot(data$DATE, data$Solar.Thermal.and.Photovoltaic, type = "l", col= 'blue', pch=16 ,xlab = "Date", ylab = "Generation",
main = "Time Series of Solar | Thermal | Photovoltaic Generation", ylim = c(0, 5000))
# Plot time series for Solar, thermal and photovoltaic with custom y-axis labels
plot(data$DATE, data$Solar.Thermal.and.Photovoltaic, type = "l", col= 'yellow', pch=16 ,xlab = "Date", ylab = "Generation",
main = "Time Series of Solar | Thermal | Photovoltaic Generation", ylim = c(0, 5000))
# Plot time series for Solar, thermal and photovoltaic with custom y-axis labels
plot(data$DATE, data$Solar.Thermal.and.Photovoltaic, type = "l", col= 'orange', pch=16 ,xlab = "Date", ylab = "Generation",
main = "Time Series of Solar | Thermal | Photovoltaic Generation", ylim = c(0, 5000))
lines(smooth.spline(data$DATE, data$Solar.Thermal.and.Photovoltaic), col = "darkorange")
# Plot time series for Solar, thermal and photovoltaic with custom y-axis labels
plot(data$DATE, data$Solar.Thermal.and.Photovoltaic, type = "l", col= 'orange', pch=16 ,xlab = "Date", ylab = "Generation",
main = "Time Series of Solar | Thermal | Photovoltaic Generation", ylim = c(0, 5000))
legend('topright', legend = 'Solar | Theremal | Photovoltaic', col = 'orange', lty=1, cex=0,8)
legend('topright', legend = 'Solar | Theremal | Photovoltaic', col = 'orange', lty=1)
# Plot time series for Petroleum
plot(data$DATE, data$Petroleum, type = "l", col= 'orange', pch=16 ,xlab = "Date", ylab = "Generation",
main = "Time Series of Petroleum generation", ylim = c(0, 100000))
# Plot time series for Petroleum
plot(data$DATE, data$Petroleum, type = "l", col= 'black', pch=16 ,xlab = "Date", ylab = "Generation",
main = "Time Series of Petroleum generation", ylim = c(0, 100000))
legend('topright', legend = 'Petroleum', col = 'black', lty=1)
# Plot time series for natural gas
plot(data$DATE, data$Natural.Gas, type = "l", col= 'green', pch=16 ,xlab = "Date", ylab = "Generation",
main = "Time Series of Natural Gas", ylim = c(0, 5000))
legend('topright', legend = 'Natural Gas', col = 'green', lty=1)
# Plot for Solar | Thermal | Photovoltaic
plot(data$DATE, data$Solar.Thermal.and.Photovoltaic, type = "l", pch = 16, col = "blue", xlab = "Date", ylab = "Generation (MWh)",
main = "Time series overall generation for each energy source", ylim = c(0, 100000), xlim = c(as.Date("2001-01-01"), as.Date("2022-12-31")), las = 2)
# Plot time series for natural gas
plot(data$DATE, data$Natural.Gas, type = "l", col= 'green', pch=16 ,xlab = "Date", ylab = "Generation",
main = "Time Series of Natural Gas", ylim = c(0, 10000))
# Plot time series for natural gas
plot(data$DATE, data$Natural.Gas, type = "l", col= 'green', pch=16 ,xlab = "Date", ylab = "Generation",
main = "Time Series of Natural Gas", ylim = c(0, 15000))
# Plot time series for other biomass
plot(data$DATE, data$Other.Biomass, type = "l", col= 'red', pch=16 ,xlab = "Date", ylab = "Generation",
main = "Time Series of Biomass", ylim = c(0, 5000))
legend('topright', legend = 'Biomass', col = 'red', lty=1)
# Plot time series for other biomass
plot(data$DATE, data$Other.Biomass, type = "l", col= 'red', pch=16 ,xlab = "Date", ylab = "Generation",
main = "Time Series of Biomass", ylim = c(0, 8000))
# Plot time series for other biomass
plot(data$DATE, data$Other.Biomass, type = "l", col= 'red', pch=16 ,xlab = "Date", ylab = "Generation",
main = "Time Series of Biomass", ylim = c(0, 7000))
# Plot time series for other biomass
plot(data$DATE, data$Other.Biomass, type = "l", col= 'red', pch=16 ,xlab = "Date", ylab = "Generation",
main = "Time Series of Biomass", ylim = c(0, 6000))
# Plot time series for Solar, thermal and photovoltaic with custom y-axis labels
plot(data$DATE, data$Solar.Thermal.and.Photovoltaic, type = "l", col= 'blue', pch=16 ,xlab = "Date", ylab = "Generation",
main = "Time Series of Solar | Thermal | Photovoltaic Generation", ylim = c(0, 100000))
legend('topright', legend = 'Solar | Theremal | Photovoltaic', col = 'blue', lty=1)
# Plot for Petroleum
lines(data$DATE, data$Petroleum, type = "l", col = "green")
lines(smooth.spline(data$DATE, data$Petroleum), col = "darkgreen")
# Plot for Natural Gas
lines(data$DATE, data$Natural.Gas, type = "l", col = "orange")
lines(smooth.spline(data$DATE, data$Natural.Gas), col = "darkorange")
# Plot for Other Biomass
lines(data$DATE, data$Other.Biomass, type = "l", col = "purple")
lines(smooth.spline(data$DATE, data$Other.Biomass), col = "darkpurple")
# Legend
legend("topright", legend = c("Solar | Thermal | Photovoltaic", "Petroleum", "Natural Gas", "Other Biomass", "Smoothline"),
col = c("blue", "green", "orange", "purple", "red"), lty = 1, cex = 0.8)
# Plot time series for Solar, thermal and photovoltaic with custom y-axis labels
plot(data$DATE, data$Solar.Thermal.and.Photovoltaic, type = "l", col= 'blue', pch=16 ,xlab = "Date", ylab = "Generation",
main = "Time Series of Solar | Thermal | Photovoltaic Generation", ylim = c(0, 100000))
# Plot for Petroleum
lines(data$DATE, data$Petroleum, type = "l", col = "green")
lines(smooth.spline(data$DATE, data$Petroleum), col = "darkgreen")
# Plot for Natural Gas
lines(data$DATE, data$Natural.Gas, type = "l", col = "orange")
lines(smooth.spline(data$DATE, data$Natural.Gas), col = "darkorange")
# Plot for Other Biomass
lines(data$DATE, data$Other.Biomass, type = "l", col = "purple")
lines(smooth.spline(data$DATE, data$Other.Biomass), col = "darkpurple")
# Legend
legend("topright", legend = c("Solar | Thermal | Photovoltaic", "Petroleum", "Natural Gas", "Other Biomass", "Smoothline"),
col = c("blue", "green", "orange", "purple", "red"), lty = 1, cex = 0.8)
# Plot time series for Solar, thermal and photovoltaic with custom y-axis labels
plot(data$DATE, data$Solar.Thermal.and.Photovoltaic, type = "l", col= 'blue', pch=16 ,xlab = "Date", ylab = "Generation",
main = "Time Series of Solar | Thermal | Photovoltaic Generation", ylim = c(0, 100000))
# Plot for Petroleum
lines(data$DATE, data$Petroleum, type = "l", col = "green")
# Plot for Natural Gas
lines(data$DATE, data$Natural.Gas, type = "l", col = "orange")
# Plot for Other Biomass
lines(data$DATE, data$Other.Biomass, type = "l", col = "purple")
# Legend
legend("topright", legend = c("Solar | Thermal | Photovoltaic", "Petroleum", "Natural Gas", "Other Biomass", "Smoothline"),
col = c("blue", "green", "orange", "purple", "red"), lty = 1, cex = 0.8)
# Legend
legend("topright", legend = c("Solar | Thermal | Photovoltaic", "Petroleum", "Natural Gas", "Other Biomass"),
col = c("blue", "green", "orange", "purple"), lty = 1, cex = 0.8)
# Plot time series for Solar, thermal and photovoltaic with custom y-axis labels
plot(data$DATE, data$Solar.Thermal.and.Photovoltaic, type = "l", col= 'blue', pch=16 ,xlab = "Date", ylab = "Generation",
main = "Time Series of Solar | Thermal | Photovoltaic Generation", ylim = c(0, 100000))
# Plot for Petroleum
lines(data$DATE, data$Petroleum, type = "l", col = "green")
# Plot for Natural Gas
lines(data$DATE, data$Natural.Gas, type = "l", col = "orange")
# Plot for Other Biomass
lines(data$DATE, data$Other.Biomass, type = "l", col = "purple")
# Legend
legend("topright", legend = c("Solar | Thermal | Photovoltaic", "Petroleum", "Natural Gas", "Other Biomass"),
col = c("blue", "green", "orange", "purple"), lty = 1, cex = 0.8)
##Plot generation by energy source
plot_data <- generation_data %>%
group_by(date, energy_source) %>%
summarise(gen_by_energy = sum(generation_mwh))
# Plot time series for  with custom y-axis labels
plot(data$DATE, data$Natural.Gas, type = "b", xlab = "Date", ylab = "Petroleum Generation",
main = "Time Series of Natural Gas", ylim = c(0, 15000))
# Customize x-axys labels
axis.Date(side = 1, at = seq(as.Date("2001-01-01"), as.Date("2022-12-31"), by = "years"), format = "%Y", las = 2)
# Melt the data for ggplot
library(reshape2)
energy_data_melted <- melt(data, id.vars = "DATE", measure.vars = c('Natural.Gas','Other.Biomass','Petroleum','Solar.Thermal.and.Photovoltaic'))
# Create a bar plot
ggplot(energy_data_melted, aes(x = DATE, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "stack", color = "black") +
labs(title = "Energy Generation Over Time",
x = "Date",
y = "Energy Generated (units)",
fill = "Energy Source") +
theme_minimal()
##Plot generation by energy source
plot_data <- generation_data %>%
group_by(date, energy_source) %>%
summarise(gen_by_energy = sum(generation_mwh))
Acf(gmwh)
source("~/GitHub/business_data/Business_Project_Script.R", echo=TRUE)
print(colnames(data))
# Create a bar plot
ggplot(energy_data_melted, aes(x = DATE, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "stack", color = "orange") +
labs(title = "Energy Generation Over Time",
x = "Date",
y = "Energy Generated (MWh)",
fill = "Energy Source") +
theme_minimal()
# Create a bar plot
ggplot(energy_data_melted, aes(x = DATE, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "stack", color = "black") +
labs(title = "Energy Generation Over Time",
x = "Date",
y = "Energy Generated (MWh)",
fill = "Energy Source") +
theme_minimal()
# Plot time series Combined Heat and Power. Commercial Power
plot(data$DATE, data$Combined.Heat.and.Power.Commercial.Power, type = "l", col= 'orange', pch=16 ,xlab = "Date", ylab = "Generation",
main = "Time Series Combined Heat and Power. Commercial Power", ylim = c(0, 5000))
# Plot time series Combined Heat and Power. Commercial Power
plot(data$DATE, data$Combined.Heat.and.Power.Commercial.Power, type = "l", col= 'orange', pch=16 ,xlab = "Date", ylab = "Generation",
main = "Time Series Combined Heat and Power. Commercial Power", ylim = c(0, 5000))
# Plot time series Combined Heat and Power. Commercial Power
plot(data$DATE, data$Combined.Heat.and.Power..Commercial.Power, type = "l", col= 'orange', pch=16 ,xlab = "Date", ylab = "Generation",
main = "Time Series Combined Heat and Power. Commercial Power", ylim = c(0, 5000))
# Plot time series Combined Heat and Power. Commercial Power
plot(data$DATE, data$Combined.Heat.and.Power.Commercial.Power, type = "l", col= 'orange', pch=16 ,xlab = "Date", ylab = "Generation",
main = "Time Series Combined Heat and Power. Commercial Power", ylim = c(0, 5000))
# Plot time series Combined Heat and Power. Commercial Power
plot(data$DATE, data$Combined.Heat.and.Power..Commercial.Power, type = "l", col= 'orange', pch=16 ,xlab = "Date", ylab = "Generation",
main = "Time Series Combined Heat and Power. Commercial Power", ylim = c(0, 5000))
# Plot time series Combined Heat and Power. Commercial Power
plot(data$DATE, data$Combined.Heat.and.Power..Commercial.Power, type = "l", col= 'orange', pch=16 ,xlab = "Date", ylab = "Generation",
main = "Time Series Combined Heat and Power. Commercial Power", ylim = c(0, 7000))
# Plot time series Combined Heat and Power. Commercial Power
plot(data$DATE, data$Combined.Heat.and.Power..Commercial.Power, type = "l", col= 'orange', pch=16 ,xlab = "Date", ylab = "Generation",
main = "Time Series Combined Heat and Power. Commercial Power", ylim = c(0, 10000))
# Plot time series Combined Heat and Power. Commercial Power
plot(data$DATE, data$Combined.Heat.and.Power..Commercial.Power, type = "l", col= 'orange', pch=16 ,xlab = "Date", ylab = "Generation",
main = "Time Series Combined Heat and Power. Commercial Power", ylim = c(0, 15000))
# Plot time series Combined Heat and Power. Commercial Power
plot(data$DATE, data$Combined.Heat.and.Power..Commercial.Power, type = "l", col= 'orange', pch=16 ,xlab = "Date", ylab = "Generation",
main = "Time Series Combined Heat and Power. Commercial Power", ylim = c(0, 18000))
# Plot time series Combined Heat and Power. Commercial Power
plot(data$DATE, data$Combined.Heat.and.Power..Commercial.Power, type = "l", col= 'orange', pch=16 ,xlab = "Date", ylab = "Generation",
main = "Time Series Combined Heat and Power. Commercial Power", ylim = c(0, 20000))
# Plot time series Combined Heat and Power. Commercial Power
plot(data$DATE, data$Combined.Heat.and.Power..Electric.Power, type = "l", col= 'orange', pch=16 ,xlab = "Date", ylab = "Generation",
main = "Time Series Combined Heat and Power. Commercial Power", ylim = c(0, 20000))
plot(data$DATE, data$Combined.Heat.and.Power..Electric.Power, type = "l", col= 'orange', pch=16 ,xlab = "Date", ylab = "Generation",
main = "Time Series Combined Heat and Power. Commercial Power", ylim = c(0, 20000))
legend('topright', legend = 'Solar | Theremal | Photovoltaic', col = 'orange', lty=1)
legend('topright', legend = 'Generation of electric power', col = 'orange', lty=1)
plot(data$DATE, data$Electric.Generators..Electric.Utilities, type = "l", col= 'orange', pch=16 ,xlab = "Date", ylab = "Generation",
main = "Time Series Electric Generators | electric utilities", ylim = c(0, 20000))
plot(data$DATE, data$Electric.Generators..Electric.Utilities, type = "l", col= 'orange', pch=16 ,xlab = "Date", ylab = "Generation",
main = "Time Series Electric Generators | electric utilities", ylim = c(0, 10000))
plot(data$DATE, data$Electric.Generators..Independent.Power.Producers, type = "l", col= 'orange', pch=16 ,xlab = "Date", ylab = "Generation",
main = "Time Series Electric Generators | electric utilities", ylim = c(0, 10000))
plot(data$DATE, data$Electric.Generators..Independent.Power.Producers, type = "l", col= 'orange', pch=16 ,xlab = "Date", ylab = "Generation",
main = "Time Series Electric Generators | electric utilities", ylim = c(0, 20000))
plot(data$DATE, data$Electric.Generators..Independent.Power.Producers, type = "l", col= 'orange', pch=16 ,xlab = "Date", ylab = "Generation",
main = "Time Series Electric Generators | electric utilities", ylim = c(0, 100000))
