# Plot customers residential
plot(filtered_residential$DATE, filtered_residential$Customers_residential, type = "l", col = 'orange', pch = 16,
xlab = "Date", ylab = "Generation", main = "Residential's customers", ylim = c(0, max(filtered_residential$Customers_residential)))
legend('topright', legend = 'Generation of electric power', col = 'orange', lty = 1)
legend('lowright', legend = 'Generation of electric power', col = 'orange', lty = 1)
legend('bottomright', legend = 'Generation of electric power', col = 'orange', lty = 1)
legend('bottom', legend = 'Generation of electric power', col = 'orange', lty = 1)
# Plot customers residential
plot(filtered_residential$DATE, filtered_residential$Customers_residential, type = "l", col = 'orange', pch = 16,
xlab = "Date", ylab = "Generation", main = "Residential's customers", ylim = c(0, max(filtered_residential$Customers_residential)))
legend('bottom', legend = 'Generation of electric power', col = 'orange', lty = 1)
# Plot customers residential
plot(filtered_residential$DATE, filtered_residential$Customers_residential, type = "l", col = 'orange', pch = 16,
xlab = "Date", ylab = "Generation", main = "Residential's customers", ylim = c(0, max(filtered_residential$Customers_residential)))
legend('bottomright', legend = 'Generation of electric power', col = 'orange', lty = 1)
legend('bottomright', legend = 'N.customers', col = 'orange', lty = 1)
legend('bottomright', legend = 'Customers', col = 'orange', lty = 1)
# Plot customers residential
plot(filtered_residential$DATE, filtered_residential$Customers_residential, type = "l", col = 'orange', pch = 16,
xlab = "Date", ylab = "Number of customers", main = "Residential's customers", ylim = c(0, max(filtered_residential$Customers_residential)))
legend('bottomright', legend = 'Customers', col = 'orange', lty = 1)
# Filter data for Customers_total > 0
filtered_total <- data[data$Customers_total > 0, ]
# Plot customers total
plot(filtered_total$DATE, filtered_total$Customers_total, type = "l", col = 'orange', pch = 16,
xlab = "Date", ylab = "Number of customers", main = "Total Customers", ylim = c(0, max(filtered_total$Customers_total)))
legend('bottomright', legend = 'Customers', col = 'orange', lty = 1)
legend('bottomright', legend = 'Customers', col = 'orange', lty = 1)+
scale_y_continuous(limits = c(0, 20000), breaks = seq(0, 20000, by = 2500))
# Plot customers residential
plot(filtered_residential$DATE, filtered_residential$Customers_residential, type = "l", col = 'orange', pch = 16,
xlab = "Date", ylab = "Number of customers", main = "Residential's customers", ylim = c(0, max(filtered_residential$Customers_residential)))
legend('bottomright', legend = 'Customers', col = 'orange', lty = 1)+
scale_y_continuous(limits = c(0, 20000), breaks = seq(0, 20000, by = 2500))
legend('bottomright', legend = 'Customers', col = 'orange', lty = 1)+
scale_y_continuous(limits = c(0, 20000), breaks = seq(0, 20000, by = 2500))
# Plot customers residential
plot(filtered_residential$DATE, filtered_residential$Customers_residential, type = "l", col = 'orange', pch = 16,
xlab = "Date", ylab = "Number of customers", main = "Residential's customers", ylim = c(0, max(filtered_residential$Customers_residential)))+
scale_y_continuous(limits = c(0, 20000), breaks = seq(0, 20000, by = 2500))
# Filter data for Customers_total > 0
filtered_total <- data[data$Customers_total > 0, ]
# Plot customers total
plot(filtered_total$DATE, filtered_total$Customers_total, type = "l", col = 'orange', pch = 16,
xlab = "Date", ylab = "Number of customers", main = "Total Customers",
ylim = c(0, max(filtered_total$Customers_total)),
xlim = c(min(data$DATE), max(data$DATE)))
legend('bottomright', legend = 'Customers', col = 'orange', lty = 1)
# Filter data for Customers_transportation > 0
filtered_transportation <- data[data$Customers_transportation > 0, ]
# Plot customers transportation
plot(filtered_transportation$DATE, filtered_transportation$Customers_transportation, type = "l", col = 'orange', pch = 16,
xlab = "Date", ylab = "Number of customers", main = "Transportation's customers",
ylim = c(0, max(filtered_transportation$Customers_transportation)),
xlim = c(min(data$DATE), max(data$DATE)))
legend('bottomright', legend = 'Customers', col = 'orange', lty = 1)
# Filter data for Customers_residential > 0
filtered_residential <- data[data$Customers_residential > 0, ]
# Plot customers residential
plot(filtered_residential$DATE, filtered_residential$Customers_residential, type = "l", col = 'orange', pch = 16,
xlab = "Date", ylab = "Number of customers", main = "Residential's customers",
ylim = c(0, max(filtered_residential$Customers_residential)),
xlim = c(min(data$DATE), max(data$DATE)))
legend('bottomright', legend = 'Customers', col = 'orange', lty = 1)
# Set breaks for every 2 years
axis_breaks <- seq(min(data$DATE), max(data$DATE), by = "2 years")
# Filter data for Customers_residential > 0
filtered_residential <- data[data$Customers_residential > 0, ]
# Plot customers residential
plot(filtered_residential$DATE, filtered_residential$Customers_residential, type = "l", col = 'orange', pch = 16,
xlab = "Date", ylab = "Number of customers", main = "Residential's customers",
ylim = c(0, max(filtered_residential$Customers_residential)),
xlim = c(min(data$DATE), max(data$DATE)))
legend('bottomright', legend = 'Customers', col = 'orange', lty = 1)
# Set breaks for every 2 years
axis_breaks <- seq(min(data$DATE), max(data$DATE), by = "2 years")
# Customize x-axis using scale_x_continuous
axis_labels <- format(axis_breaks, "%Y")
axis_labels <- ifelse(grepl("^20", axis_labels), gsub("^20", "", axis_labels), axis_labels)
# Customize x-axis using scale_x_continuous
axis_labels <- format(axis_breaks, "%Y")
axis_labels <- ifelse(grepl("^20", axis_labels), gsub("^20", "", axis_labels), axis_labels)
# Plot customers residential
plot(filtered_residential$DATE, filtered_residential$Customers_residential, type = "l", col = 'orange', pch = 16,
xlab = "Date", ylab = "Number of customers", main = "Residential's customers",
ylim = c(0, max(filtered_residential$Customers_residential)),
xlim = c(min(data$DATE), max(data$DATE)))
legend('bottomright', legend = 'Customers', col = 'orange', lty = 1)
# Set breaks for every 2 years
axis_breaks <- seq(min(data$DATE), max(data$DATE), by = "2 years")
# Customize x-axis using scale_x_continuous
axis_labels <- format(axis_breaks, "%Y")
axis_labels <- ifelse(grepl("^20", axis_labels), gsub("^20", "", axis_labels), axis_labels)
# Customize x-axis using scale_x_continuous
axis_labels <- format(axis_breaks, "%Y")
axis_labels <- ifelse(grepl("^20", axis_labels), gsub("^20", "", axis_labels), axis_labels)
# Filter data for Customers_commercial > 0
filtered_commercial <- data[data$Customers_commercial > 0, ]
# Plot customers commercial
plot(filtered_commercial$DATE, filtered_commercial$Customers_commercial, type = "l", col = 'orange', pch = 16,
xlab = "Date", ylab = "Number of customers", main = "Commercial's customers",
ylim = c(0, max(filtered_commercial$Customers_commercial)),
xlim = c(min(data$DATE), max(data$DATE)))
legend('bottomright', legend = 'Customers', col = 'orange', lty = 1)
# Filter data for Customers_industrial > 0
filtered_industrial <- data[data$Customers_industrial > 0, ]
# Plot customers industrial
plot(filtered_industrial$DATE, filtered_industrial$Customers_industrial, type = "l", col = 'orange', pch = 16,
xlab = "Date", ylab = "Number of customers", main = "Industrial's customers",
ylim = c(0, max(filtered_industrial$Customers_industrial)),
xlim = c(min(data$DATE), max(data$DATE)))
legend('bottomright', legend = 'Customers', col = 'orange', lty = 1)
# Plot customers residential
plot(filtered_residential$DATE, filtered_residential$Customers_residential, type = "l", col = 'orange', pch = 16,
xlab = "Date", ylab = "Number of customers", main = "Residential's customers", ylim = c(0, max(filtered_residential$Customers_residential)))+
legend('bottomright', legend = 'Customers', col = 'orange', lty = 1)
# Plot customers residential
plot(filtered_residential$DATE, filtered_residential$Customers_residential, type = "l", col = 'orange', pch = 16,
xlab = "Date", ylab = "Number of customers", main = "Residential's customers", ylim = c(0, max(filtered_residential$Customers_residential)))+
scale_x_date('2020')
# Plot customers residential
plot(filtered_residential$DATE, filtered_residential$Customers_residential, type = "l", col = 'orange', pch = 16,
xlab = "Date", ylab = "Number of customers", main = "Residential's customers", ylim = c(0, max(filtered_residential$Customers_residential)))+
scale_x_date(breaks=2)
# Plot customers residential
plot(filtered_residential$DATE, filtered_residential$Customers_residential, type = "l", col = 'orange', pch = 16,
xlab = "Date", ylab = "Number of customers", main = "Residential's customers", ylim = c(0, max(filtered_residential$Customers_residential)))+
scale_x_date(filtered_residential$DATE, breaks=2)
# Plot customers residential
plot(filtered_residential$DATE, filtered_residential$Customers_residential, type = "l", col = 'orange', pch = 16,
xlab = "Date", ylab = "Number of customers", main = "Residential's customers", ylim = c(0, max(filtered_residential$Customers_residential)))+
scale_x_date(filtered_residential$DATE)
ggplot(avg_gas_data, aes(x = factor(month), y = avg_generation, fill = as.character(highlight_flag))) +
geom_bar(stat = "identity", color = "darkblue")+
labs(x = "Month", y = "Avg. Generation (MWh)", fill = "Natural Gas usage") +
scale_fill_manual(values = c("FALSE" = "lightblue", "TRUE" = '#3e6fff'), labels = c('Normal', 'Highest')) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
axis.line = element_line(color = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text = element_text(hjust = 1, family = 'Helvetica Neue'),
title = element_text(face = 'bold')
) +
scale_y_continuous(limits = c(0, 12000), breaks = seq(0, 12000, by = 2000))+
geom_text(data = filter(avg_gas_data, month == "lug"),
aes(x = month, y = avg_generation, label = round(avg_generation)),
vjust = -0.5, color = "black", size = 6)
ggplot(avg_gas_data, aes(x = factor(month), y = avg_generation, fill = as.character(highlight_flag))) +
geom_bar(stat = "identity", color = "darkblue")+
labs(x = "Month", y = "Avg. Generation (MWh)", fill = "Natural Gas usage") +
scale_fill_manual(values = c("FALSE" = "lightblue", "TRUE" = '#3e6fff'), labels = c('Normal', 'Highest')) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
axis.line = element_line(color = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text = element_text(hjust = 1, family = 'Helvetica Neue'),
title = element_text(face = 'bold')
) +
scale_y_continuous(limits = c(0, 12000), breaks = seq(0, 12000, by = 2000))+
geom_text(data = filter(avg_gas_data, month == "lug"),
aes(x = month, y = avg_generation, label = round(avg_generation)),
vjust = -0.5, color = "black", size = 6)
# Set the x-axis limits to go up to the year 2015
ggplot(petroleum_data, aes(x = DATE, y = Petroleum, color = "Petroleum")) +
geom_line(size = 1, color = 'darkblue') +  # Adjust line width and color here
geom_point(data = max_point, aes(x = DATE, y = Petroleum), color = 'red', size = 3) +
geom_text(data = max_point, aes(x = DATE, y = Petroleum, label = paste("max: ", round(Petroleum, 2))),
vjust = 0.2, hjust = -0.3, color = 'black', size = 5, family='serif') +  # Display the value of the max point
labs(title = "Petroleum Energy Generation",
x = "Time",
y = "MWh") +
theme_minimal() +
scale_x_date(limits = c(as.Date('2001-01-01'), as.Date("2015-12-31")), expand = c(0, 0), date_breaks = "1 year", date_labels = "%Y") +  # Adjust x-axis limits and labels
theme(
panel.grid.major = element_line(color = "white", size = 0.5),  # Adjust major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
plot.title = element_text(face = "bold", hjust = 0.5, size = 16),  # Adjust title font size
axis.text = element_text(size = 12, family = "serif"),  # Adjust axis text font size and family
axis.title = element_text(size = 14, family = "serif", angle = 0),  # Adjust axis title font size and set angle to 0 for horizontal
axis.line = element_line(color = "black", size = 0.8),  # Adjust axis line color and size
axis.ticks = element_line(color = "black"),  # Adjust tick marks color
axis.text.x = element_text(angle = 45, hjust = 1)  # Rotate x-axis labels at a 45-degree angle
) +
scale_color_manual(name = "Energy Source", values = c("Petroleum" = "blue"))
------------------------------------------------------------------------------
# Filter the dataset for rows where Petroleum is greater than 0
petroleum_data <- subset(data, Petroleum > 0)
# Filter the dataset for rows where Petroleum is greater than 0
petroleum_data <- subset(data, Petroleum > 0)
# Find the date and value of the maximum point
max_point <- petroleum_data[which.max(petroleum_data$Petroleum), ]
# Set the x-axis limits to go up to the year 2015
ggplot(petroleum_data, aes(x = DATE, y = Petroleum, color = "Petroleum")) +
geom_line(size = 1, color = 'darkblue') +  # Adjust line width and color here
geom_point(data = max_point, aes(x = DATE, y = Petroleum), color = 'red', size = 3) +
geom_text(data = max_point, aes(x = DATE, y = Petroleum, label = paste("max: ", round(Petroleum, 2))),
vjust = 0.2, hjust = -0.3, color = 'black', size = 5, family='serif') +  # Display the value of the max point
labs(title = "Petroleum Energy Generation",
x = "Time",
y = "MWh") +
theme_minimal() +
scale_x_date(limits = c(as.Date('2001-01-01'), as.Date("2015-12-31")), expand = c(0, 0), date_breaks = "1 year", date_labels = "%Y") +  # Adjust x-axis limits and labels
theme(
panel.grid.major = element_line(color = "white", size = 0.5),  # Adjust major grid lines
panel.grid.minor = element_blank(),  # Remove minor grid lines
plot.title = element_text(face = "bold", hjust = 0.5, size = 16),  # Adjust title font size
axis.text = element_text(size = 12, family = "serif"),  # Adjust axis text font size and family
axis.title = element_text(size = 14, family = "serif", angle = 0),  # Adjust axis title font size and set angle to 0 for horizontal
axis.line = element_line(color = "black", size = 0.8),  # Adjust axis line color and size
axis.ticks = element_line(color = "black"),  # Adjust tick marks color
axis.text.x = element_text(angle = 45, hjust = 1)  # Rotate x-axis labels at a 45-degree angle
) +
scale_color_manual(name = "Energy Source", values = c("Petroleum" = "blue"))
# Plot time series Combined Heat and Power. Commercial Power
plot(data$DATE, data$Combined.Heat.and.Power..Commercial.Power, type = "l", col= 'orange', pch=16 ,xlab = "Date", ylab = "Generation",
main = "Time Series Combined Heat and Power. Commercial Power", ylim = c(0, 20000))+
scale_x_date(limits = c(as.Date('2001-01-01'), as.Date("2015-12-31")), expand = c(0, 0), date_breaks = "1 year", date_labels = "%Y") +  # Adjust x-axis limits and labels
legend('topright', legend = 'Solar | Theremal | Photovoltaic', col = 'orange', lty=1)
# Plot customers residential
plot(filtered_residential$DATE, filtered_residential$Customers_residential, type = "l", col = 'orange', pch = 16,
xlab = "Date", ylab = "Number of customers", main = "Residential's customers", ylim = c(0, max(filtered_residential$Customers_residential)))+
legend('bottomright', legend = 'Customers', col = 'orange', lty = 1)+
scale_x_date(limits = c(as.Date('2001-01-01'), as.Date("2015-12-31")), expand = c(0, 0), date_breaks = "1 year", date_labels = "%Y") +  # Adjust x-axis limits and labels
# Filter data for Customers_commercial > 0
filtered_commercial <- data[data$Customers_commercial > 0, ]
# Plot customers residential
plot(filtered_residential$DATE, filtered_residential$Customers_residential, type = "l", col = 'orange', pch = 16,
xlab = "Date", ylab = "Number of customers", main = "Residential's customers", ylim = c(0, max(filtered_residential$Customers_residential)))+
scale_x_date(limits = c(as.Date('2001-01-01'), as.Date("2015-12-31")), expand = c(0, 0), date_breaks = "1 year", date_labels = "%Y") +  # Adjust x-axis limits and labels
legend('bottomright', legend = 'Customers', col = 'orange', lty = 1)
# Plot customers residential
plot(filtered_residential$DATE, filtered_residential$Customers_residential, type = "l", col = 'orange', pch = 16,
xlab = "Date", ylab = "Number of customers", main = "Residential's customers", ylim = c(0, max(filtered_residential$Customers_residential)))+
scale_x_date(limits = c(as.Date('2001-01-01'), as.Date("2015-12-31")), expand = c(0, 0), date_breaks = "1 year", date_labels = "%Y")  # Adjust x-axis limits and labels
# Plot customers residential
plot(filtered_residential$DATE, filtered_residential$Customers_residential, type = "l", col = 'orange', pch = 16,
xlab = "Date", ylab = "Number of customers", main = "Residential's customers", ylim = c(0, max(filtered_residential$Customers_residential)))+
scale_x_date(limits = c(as.Date('2001-01-01'), as.Date("2015-12-31")), expand = c(0, 0), date_breaks = "1 year", date_labels = "%Y")  # Adjust x-axis limits and labels
# Filter data for Customers_residential > 0
filtered_residential <- data[data$Customers_residential > 0, ]
# Plot customers residential
plot(filtered_residential$DATE, filtered_residential$Customers_residential, type = "l", col = 'orange', pch = 16,
xlab = "Date", ylab = "Number of customers", main = "Residential's customers",
ylim = c(0, max(filtered_residential$Customers_residential)))
# Customize x-axis using scale_x_date
axis_breaks <- seq(as.Date(min(data$DATE)), as.Date(max(data$DATE)), by = "2 years")
axis_labels <- format(axis_breaks, "%Y")
# Filter data for Customers_commercial > 0
filtered_commercial <- data[data$Customers_commercial > 0, ]
# Plot customers commercial
plot(filtered_commercial$DATE, filtered_commercial$Customers_commercial, type = "l", col = 'orange', pch = 16,
xlab = "Date", ylab = "Number of customers", main = "Commercial's customers",
ylim = c(0, max(filtered_commercial$Customers_commercial)))
# Customize x-axis using scale_x_date
axis_breaks <- seq(as.Date(min(data$DATE)), as.Date(max(data$DATE)), by = "2 years")
axis_labels <- format(axis_breaks, "%Y")
# Apply the customized x-axis using scale_x_date
scale_x_date(breaks = axis_breaks, labels = axis_labels, date_labels = "%Y")
legend('bottomright', legend = 'Customers', col = 'orange', lty = 1)
# Apply the customized x-axis using scale_x_date
scale_x_date(limits = c(as.Date('2011-01-01'), as.Date("2022-12-31")),breaks = axis_breaks, labels = axis_labels, date_labels = "%Y")
legend('bottomright', legend = 'Customers', col = 'orange', lty = 1)
# Plot customers residential
plot(filtered_residential$DATE, filtered_residential$Customers_residential, type = "l", col = 'orange', pch = 16,
xlab = "Date", ylab = "Number of customers", main = "Residential's customers",
ylim = c(0, max(filtered_residential$Customers_residential)))
# Customize x-axis using scale_x_date
axis_breaks <- seq(as.Date(min(data$DATE)), as.Date(max(data$DATE)), by = "2 years")
axis_labels <- format(axis_breaks, "%Y")
# Filter data for Customers_commercial > 0
filtered_commercial <- data[data$Customers_commercial > 0, ]
# Plot customers commercial
plot(filtered_commercial$DATE, filtered_commercial$Customers_commercial, type = "l", col = 'orange', pch = 16,
xlab = "Date", ylab = "Number of customers", main = "Commercial's customers",
ylim = c(0, max(filtered_commercial$Customers_commercial)))
# Customize x-axis using scale_x_date
axis_breaks <- seq(as.Date(min(data$DATE)), as.Date(max(data$DATE)), by = "2 years")
axis_labels <- format(axis_breaks, "%Y")
# Apply the customized x-axis using scale_x_date
scale_x_date(limits = c(as.Date('2011-01-01'), as.Date("2022-12-31")),breaks = axis_breaks, labels = axis_labels, date_labels = "%Y")
legend('bottomright', legend = 'Customers', col = 'orange', lty = 1)
# Apply the customized x-axis using scale_x_date
scale_x_date(limits = c(as.Date('2011-01-01'), as.Date("2022-12-31")),breaks = 2, labels = axis_labels, date_labels = "%Y")
# Filter data for Customers_residential > 0
filtered_residential <- data[data$Customers_residential > 0, ]
# Plot customers residential
plot(filtered_residential$DATE, filtered_residential$Customers_residential, type = "l", col = 'orange', pch = 16,
xlab = "Date", ylab = "Number of customers", main = "Residential's customers", ylim = c(0, max(filtered_residential$Customers_residential)))
# Set breaks on x-axis every 2 years
axis(1, at = seq(min(filtered_residential$DATE), max(filtered_residential$DATE), by = "2 years"), format = "%Y")
legend('bottomright', legend = 'Customers', col = 'orange', lty = 1)
# Filter data for Customers_residential > 0
filtered_residential <- data[data$Customers_residential > 0, ]
# Plot using ggplot2
ggplot(filtered_residential, aes(x = DATE, y = Customers_residential)) +
geom_line(colour = 'orange', pch = 16) +
labs(x = "Date", y = "Number of customers", title = "Residential's customers") +
scale_y_continuous(limits = c(0, max(filtered_residential$Customers_residential))) +
scale_x_date(date_labels = "%Y", date_breaks = "2 years") +
theme_minimal() +
theme(legend.position = 'bottom')
# Filter data for Customers_residential > 0
filtered_residential <- data[data$Customers_residential > 0, ]
# Plot for Customers_residential
ggplot(filtered_residential, aes(x = DATE, y = Customers_residential)) +
geom_line(colour = 'orange', pch = 16) +
labs(x = "Date", y = "Number of customers", title = "Residential's customers") +
scale_y_continuous(limits = c(0, max(filtered_residential$Customers_residential))) +
scale_x_date(date_labels = "%Y", date_breaks = "2 years") +
theme_minimal() +
theme(legend.position = 'bottom')
# Filter data for Customers_commercial > 0
filtered_commercial <- data[data$Customers_commercial > 0, ]
# Plot for Customers_commercial
ggplot(filtered_commercial, aes(x = DATE, y = Customers_commercial)) +
geom_line(colour = 'blue', pch = 16) +
labs(x = "Date", y = "Number of customers", title = "Commercial's customers") +
scale_y_continuous(limits = c(0, max(filtered_commercial$Customers_commercial))) +
scale_x_date(date_labels = "%Y", date_breaks = "2 years") +
theme_minimal() +
theme(legend.position = 'bottom')
# Filter data for Customers_industrial > 0
filtered_industrial <- data[data$Customers_industrial > 0, ]
# Plot for Customers_industrial
ggplot(filtered_industrial, aes(x = DATE, y = Customers_industrial)) +
geom_line(colour = 'green', pch = 16) +
labs(x = "Date", y = "Number of customers", title = "Industrial's customers") +
scale_y_continuous(limits = c(0, max(filtered_industrial$Customers_industrial))) +
scale_x_date(date_labels = "%Y", date_breaks = "2 years") +
theme_minimal() +
theme(legend.position = 'bottom')
# Filter data for Customers_transportation > 0
filtered_transportation <- data[data$Customers_transportation > 0, ]
# Plot for Customers_transportation
ggplot(filtered_transportation, aes(x = DATE, y = Customers_transportation)) +
geom_line(colour = 'red', pch = 16) +
labs(x = "Date", y = "Number of customers", title = "Transportation's customers") +
scale_y_continuous(limits = c(0, max(filtered_transportation$Customers_transportation))) +
scale_x_date(date_labels = "%Y", date_breaks = "2 years") +
theme_minimal() +
theme(legend.position = 'bottom')
# Filter data for Customers_industrial > 0
filtered_industrial <- data[data$Customers_industrial > 0, ]
# Plot for Customers_industrial
ggplot(filtered_industrial, aes(x = DATE, y = Customers_industrial)) +
geom_line(colour = 'green', pch = 16) +
labs(x = "Date", y = "Number of customers", title = "Industrial's customers") +
scale_y_continuous(limits = c(0, max(filtered_industrial$Customers_industrial))) +
scale_x_date(date_labels = "%Y", date_breaks = "2 years") +
theme_minimal() +
theme(legend.position = 'bottom')
# Plot for Customers_residential
ggplot(filtered_residential, aes(x = DATE, y = Customers_residential)) +
geom_line(colour = 'blue', pch = 16) +
labs(x = "Date", y = "Number of customers", title = "Residential's customers") +
scale_y_continuous(limits = c(0, max(filtered_residential$Customers_residential))) +
scale_x_date(date_labels = "%Y", date_breaks = "2 years") +
theme_minimal() +
theme(legend.position = 'bottom')
# Filter data for Customers_commercial > 0
filtered_commercial <- data[data$Customers_commercial > 0, ]
# Plot for Customers_commercial
ggplot(filtered_commercial, aes(x = DATE, y = Customers_commercial)) +
geom_line(colour = 'blue', pch = 16) +
labs(x = "Date", y = "Number of customers", title = "Commercial's customers") +
scale_y_continuous(limits = c(0, max(filtered_commercial$Customers_commercial))) +
scale_x_date(date_labels = "%Y", date_breaks = "2 years") +
theme_minimal() +
theme(legend.position = 'bottom')
# Function to create a common theme
custom_theme <- function() {
theme_minimal() +
theme(legend.position = 'bottom',
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = 'black'))
}
# Plot for Customers_residential
ggplot(filtered_residential, aes(x = DATE, y = Customers_residential)) +
geom_line(colour = 'orange', pch = 16) +
labs(x = "Date", y = "Number of customers", title = "Residential's customers") +
scale_y_continuous(limits = c(0, max(filtered_residential$Customers_residential))) +
scale_x_date(date_labels = "%Y", date_breaks = "2 years") +
custom_theme()
# Plot for Customers_commercial
ggplot(filtered_commercial, aes(x = DATE, y = Customers_commercial)) +
geom_line(colour = 'blue', pch = 16) +
labs(x = "Date", y = "Number of customers", title = "Commercial's customers") +
scale_y_continuous(limits = c(0, max(filtered_commercial$Customers_commercial))) +
scale_x_date(date_labels = "%Y", date_breaks = "2 years") +
custom_theme()
# Plot for Customers_industrial
ggplot(filtered_industrial, aes(x = DATE, y = Customers_industrial)) +
geom_line(colour = 'green', pch = 16) +
labs(x = "Date", y = "Number of customers", title = "Industrial's customers") +
scale_y_continuous(limits = c(0, max(filtered_industrial$Customers_industrial))) +
scale_x_date(date_labels = "%Y", date_breaks = "2 years") +
custom_theme()
# Plot for Customers_transportation
ggplot(filtered_transportation, aes(x = DATE, y = Customers_transportation)) +
geom_line(colour = 'red', pch = 16) +
labs(x = "Date", y = "Number of customers", title = "Transportation's customers") +
scale_y_continuous(limits = c(0, max(filtered_transportation$Customers_transportation))) +
scale_x_date(date_labels = "%Y", date_breaks = "2 years") +
custom_theme()
Acf(gmwh)
## Linear Regression
##fit a linear regression model
fit1 <- fitts<- tslm(gmwh~year_month)
# Plot for Customers_transportation
ggplot(filtered_transportation, aes(x = DATE, y = Customers_transportation)) +
geom_line(colour = 'red', pch = 16) +
labs(x = "Date", y = "Number of customers", title = "Transportation's customers") +
scale_y_continuous(limits = c(0, max(filtered_transportation$Customers_transportation))) +
scale_x_date(date_labels = "%Y", date_breaks = "2 years") +
custom_theme()
# Plot for Customers_industrial
ggplot(filtered_industrial, aes(x = DATE, y = Customers_industrial)) +
geom_line(colour = 'green', pch = 16) +
labs(x = "Date", y = "Number of customers", title = "Industrial's customers") +
scale_y_continuous(limits = c(0, max(filtered_industrial$Customers_industrial))) +
scale_x_date(date_labels = "%Y", date_breaks = "2 years") +
custom_theme()
# Plot for Customers_commercial
ggplot(filtered_commercial, aes(x = DATE, y = Customers_commercial)) +
geom_line(colour = 'blue', pch = 16) +
labs(x = "Date", y = "Number of customers", title = "Commercial's customers") +
scale_y_continuous(limits = c(0, max(filtered_commercial$Customers_commercial))) +
scale_x_date(date_labels = "%Y", date_breaks = "2 years") +
custom_theme()
source("~/GitHub/business_data/Business_Project_Script.R", echo=TRUE)
# Plot for Customers_residential
ggplot(filtered_residential, aes(x = DATE, y = Customers_residential)) +
geom_line(colour = 'orange', pch = 16) +
labs(x = "Date", y = "Number of customers", title = "Residential's customers") +
scale_y_continuous(limits = c(0, max(filtered_residential$Customers_residential))) +
scale_x_date(date_labels = "%Y", date_breaks = "2 years") +
custom_theme()
# Plot for Residential
ggplot(data$Sales_residential, aes(x = DATE, y = Sales_residential)) +
geom_line(colour = 'red', pch = 16) +
labs(x = "Date", y = "Number of customers", title = "Transportation's customers") +
scale_y_continuous(limits = c(0, max(data$Sales_residential))) +
scale_x_date(date_labels = "%Y", date_breaks = "2 years") +
custom_theme()
data$Sales_residential
# Plot for Residential
ggplot(data, aes(x = DATE, y = Sales_residential)) +
geom_line(colour = 'red', pch = 16) +
labs(x = "Date", y = "Number of customers", title = "Transportation's customers") +
scale_y_continuous(limits = c(0, max(data$Sales_residential))) +
scale_x_date(date_labels = "%Y", date_breaks = "2 years") +
custom_theme()
# Plot for Residential
ggplot(data, aes(x = DATE, y = Sales_residential)) +
geom_line(colour = 'red', pch = 16) +
labs(x = "Date", y = "Number of customers", title = "Transportation's customers") +
scale_y_continuous(limits = c(0, max(data$Sales_residential))) +
scale_x_date(date_labels = "%Y", date_breaks = "2 years") +
custom_theme()
# Plot for Residential
ggplot(data, aes(x = DATE, y = Sales_residential)) +
geom_line(colour = 'red') +
labs(x = "Date", y = "Number of customers", title = "Transportation's customers") +
scale_y_continuous(limits = c(0, max(data$Sales_residential))) +
scale_x_date(date_labels = "%Y", date_breaks = "2 years") +
custom_theme()
# Plot for Commercial Sales
ggplot(data, aes(x = DATE, y = Sales_commercial)) +
geom_line(colour = 'blue') +
labs(x = "Date", y = "Sales", title = "Commercial Sales") +
scale_y_continuous(limits = c(0, max(data$Sales_commercial))) +
scale_x_date(date_labels = "%Y", date_breaks = "2 years") +
custom_theme()
# Plot for Industrial Sales
ggplot(data, aes(x = DATE, y = Sales_industrial)) +
geom_line(colour = 'green') +
labs(x = "Date", y = "Sales", title = "Industrial Sales") +
scale_y_continuous(limits = c(0, max(data$Sales_industrial))) +
scale_x_date(date_labels = "%Y", date_breaks = "2 years") +
custom_theme()
# Plot for Transportation Sales
ggplot(data, aes(x = DATE, y = Sales_transportation)) +
geom_line(colour = 'red') +
labs(x = "Date", y = "Sales", title = "Transportation Sales") +
scale_y_continuous(limits = c(0, max(data$Sales_transportation))) +
scale_x_date(date_labels = "%Y", date_breaks = "2 years") +
custom_theme()
# Plot for Total Sales
ggplot(data, aes(x = DATE, y = Sales_total)) +
geom_line(colour = 'red') +
labs(x = "Date", y = "Sales", title = "Transportation Sales") +
scale_y_continuous(limits = c(0, max(data$Sales_transportation))) +
scale_x_date(date_labels = "%Y", date_breaks = "2 years") +
custom_theme()
# Plot for Total Sales
ggplot(data, aes(x = DATE, y = Sales_total)) +
geom_line(colour = 'red') +
labs(x = "Date", y = "Sales", title = "Transportation Sales") +
scale_y_continuous(limits = c(0, max(data$Sales_total))) +
scale_x_date(date_labels = "%Y", date_breaks = "2 years") +
custom_theme()
# Plot for Total Sales
ggplot(data, aes(x = DATE, y = Sales_total)) +
geom_line(colour = 'red') +
labs(x = "Date", y = "Sales", title = "Total Sales") +
scale_y_continuous(limits = c(0, max(data$Sales_total))) +
scale_x_date(date_labels = "%Y", date_breaks = "2 years") +
custom_theme()
